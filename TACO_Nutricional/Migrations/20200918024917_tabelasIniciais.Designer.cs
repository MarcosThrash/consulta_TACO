// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TACO_Nutricional.Models.Contexto;

namespace TACO_Nutricional.Migrations
{
    [DbContext(typeof(TacoContexto))]
    [Migration("20200918024917_tabelasIniciais")]
    partial class tabelasIniciais
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TACO_Nutricional.Models.Entidades.Alimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Calcio")
                        .HasColumnType("float");

                    b.Property<double>("Caloria")
                        .HasColumnType("float");

                    b.Property<double>("Carboidrato")
                        .HasColumnType("float");

                    b.Property<double>("Cinzas")
                        .HasColumnType("float");

                    b.Property<double>("Cobre")
                        .HasColumnType("float");

                    b.Property<double>("Colesterol")
                        .HasColumnType("float");

                    b.Property<double>("Ferro")
                        .HasColumnType("float");

                    b.Property<double>("FibraAlimentar")
                        .HasColumnType("float");

                    b.Property<double>("Fosforo")
                        .HasColumnType("float");

                    b.Property<int?>("GrupoAlimentarId")
                        .HasColumnType("int");

                    b.Property<double>("Lipideos")
                        .HasColumnType("float");

                    b.Property<double>("Magnesio")
                        .HasColumnType("float");

                    b.Property<double>("Manganes")
                        .HasColumnType("float");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Potassio")
                        .HasColumnType("float");

                    b.Property<double>("Proteina")
                        .HasColumnType("float");

                    b.Property<double>("Sodio")
                        .HasColumnType("float");

                    b.Property<double>("Umidade")
                        .HasColumnType("float");

                    b.Property<double>("Zinco")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GrupoAlimentarId");

                    b.ToTable("Alimetos");
                });

            modelBuilder.Entity("TACO_Nutricional.Models.Entidades.GrupoAlimentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GruposAlimentares");
                });

            modelBuilder.Entity("TACO_Nutricional.Models.Entidades.Alimento", b =>
                {
                    b.HasOne("TACO_Nutricional.Models.Entidades.GrupoAlimentar", "GrupoAlimentar")
                        .WithMany("Alimentos")
                        .HasForeignKey("GrupoAlimentarId");
                });
#pragma warning restore 612, 618
        }
    }
}
